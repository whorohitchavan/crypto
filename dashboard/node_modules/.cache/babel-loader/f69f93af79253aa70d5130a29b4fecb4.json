{"ast":null,"code":"var _jsxFileName = \"F:\\\\FSD-FT\\\\project\\\\New folder\\\\New folder\\\\crypto\\\\dashboard\\\\src\\\\components\\\\Coinchart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport axios from \"axios\";\nimport moment from \"moment-timezone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport default function CoinChart(props) {\n  _s();\n\n  const [currency, setCurrency] = useState('usd');\n  const [days, setDays] = useState('7');\n  const [coinval, setCoindata] = useState();\n  const {\n    id\n  } = props;\n  console.log(coinval);\n  useEffect(() => {\n    const url = `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=${currency}&days=${days}`;\n    axios.get(url).then(res => {\n      setCoindata(res.data);\n    });\n  }, [id, currency, days]);\n\n  const coinChartData = () => {\n    if (coinval) {\n      return coinval.prices.map(value => ({\n        x: value[0],\n        y: value[1].toFixed(2)\n      }));\n    }\n  };\n\n  console.log(coinChartData);\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: `${id} Chart`\n      }\n    }\n  };\n  const data = {\n    labels: [1, 2, 3, 4, 5, 6, 7],\n    //coinChartData.map(value=>{ moment(value.x).format('MMMDD')}),\n    datasets: [{\n      label: `${id} in ${currency}`,\n      data: [1, 2, 3, 4, 5, 6, 7],\n      //coinChartData.map(value=>value.y),\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)'\n    }]\n  };\n\n  const handleCurrency = e => {\n    setCurrency(e.target.value);\n  };\n\n  const handledays = e => {\n    setDays(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleCurrency,\n      value: currency,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"usd\",\n        children: \"USD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"inr\",\n        children: \"INR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handledays,\n      value: days,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"7\",\n        children: \"7 days\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"30\",\n        children: \"1 Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"182\",\n        children: \"6 Months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"365\",\n        children: \"1 Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n/*\r\n\r\nconst {coinval,setCoindata}=useState(()=>{\r\n        const coinUrl = `https://api.coingecko.com/api/v3/coins/${params.coinId}/market_chart?vs_currency=usd&days=7`\r\n    axios.get(coinUrl).then(\r\n        (res) => { console.log(res.data);\r\n        return res.data;\r\n    })});\r\n    console.log(coin.id);\r\n    console.log(coinval);\r\n    const [data,setData]=useState({\r\n        labels:[1,2,3,4,5,6,7]\r\n        /*coinChartData.map(value=>{\r\n                  moment(value.x).format('MMMDD')\r\n                }),\r\n                datasets: [\r\n                  {\r\n                    label: `${coin.id} in ${currency}`,\r\n                    data:[1,2,3,4,5,6,7],\r\n                    //coinChartData.map(value=>value.y),\r\n                    borderColor: 'rgb(255, 99, 132)',\r\n                    backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n                  },\r\n                ],\r\n              })\r\n        \r\n  \r\n  \r\n  const coinUrl = `https://api.coingecko.com/api/v3/coins/${coin.id}/market_chart?vs_currency=${currency}&days=${days}`\r\n        axios.get(coinUrl).then(\r\n            (res) => { setCoindata(res.data)\r\n            console.log(res.data);\r\n        })\r\n        \r\n        const coinChartData=coinval.prices.map(value=>({\r\n        x:value[0],y:value[1].toLocalString().toFixed(2)\r\n      }));\r\n\r\n    const options = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: `${coin.id} Chart`,\r\n          },\r\n        },\r\n      };\r\n\r\n*/\n\n_s(CoinChart, \"in2Q+LIJhnjiMmLoni3cuRXDIIs=\");\n\n_c = CoinChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinChart\");","map":{"version":3,"sources":["F:/FSD-FT/project/New folder/New folder/crypto/dashboard/src/components/Coinchart.js"],"names":["React","useEffect","useState","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","axios","moment","register","CoinChart","props","currency","setCurrency","days","setDays","coinval","setCoindata","id","console","log","url","get","then","res","data","coinChartData","prices","map","value","x","y","toFixed","options","responsive","plugins","legend","position","title","display","text","labels","datasets","label","borderColor","backgroundColor","handleCurrency","e","target","handledays"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n  } from 'chart.js';\r\n  import { Line } from 'react-chartjs-2';\r\nimport axios from \"axios\";\r\nimport moment from \"moment-timezone\";\r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n  );\r\n\r\n\r\nexport default function CoinChart(props){\r\n  \r\n  const [currency,setCurrency]=useState('usd');\r\n  const [days,setDays]=useState('7');\r\n  const [coinval,setCoindata]=useState()\r\n  const {id}=props;\r\n  console.log(coinval);\r\n  useEffect(() => {\r\n    const url = `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=${currency}&days=${days}`\r\n     axios.get(url).then(\r\n        (res) => { setCoindata(res.data); }               \r\n    )\r\n},[id,currency,days]);\r\n\r\n\r\n  const coinChartData= ()=>{\r\n    if(coinval){\r\n     return coinval.prices.map(value=>({\r\n        x:value[0],y:value[1].toFixed(2)\r\n      }));\r\n      \r\n    }\r\n  }\r\n\r\n  console.log(coinChartData);\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: `${id} Chart`,\r\n      },\r\n    },\r\n  };\r\n  \r\n  \r\n const data = {\r\n    labels:[1,2,3,4,5,6,7],\r\n    //coinChartData.map(value=>{ moment(value.x).format('MMMDD')}),\r\n    datasets: [\r\n      {\r\n        label: `${id} in ${currency}`,\r\n        data:[1,2,3,4,5,6,7],\r\n        //coinChartData.map(value=>value.y),\r\n        borderColor: 'rgb(255, 99, 132)',\r\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n      },\r\n    ],\r\n  };\r\n  const handleCurrency=(e)=>{\r\n    setCurrency(e.target.value);\r\n    \r\n}\r\nconst handledays=(e)=>{\r\n    setDays(e.target.value);\r\n}\r\n  return(\r\n    <>\r\n      <select onChange={handleCurrency} value={currency}>\r\n          <option value=\"usd\" >USD</option>\r\n          <option value=\"inr\" >INR</option>\r\n      </select>\r\n      <select onChange={handledays} value={days}>\r\n          <option value=\"7\" >7 days</option>\r\n          <option value=\"30\" >1 Month</option>\r\n          <option value=\"182\" >6 Months</option>\r\n          <option value=\"365\" >1 Year</option>\r\n      </select>\r\n      <Line options={options} data={data} />\r\n    </>\r\n)\r\n\r\n}\r\n/*\r\n\r\nconst {coinval,setCoindata}=useState(()=>{\r\n        const coinUrl = `https://api.coingecko.com/api/v3/coins/${params.coinId}/market_chart?vs_currency=usd&days=7`\r\n    axios.get(coinUrl).then(\r\n        (res) => { console.log(res.data);\r\n        return res.data;\r\n    })});\r\n    console.log(coin.id);\r\n    console.log(coinval);\r\n    const [data,setData]=useState({\r\n        labels:[1,2,3,4,5,6,7]\r\n        /*coinChartData.map(value=>{\r\n                  moment(value.x).format('MMMDD')\r\n                }),\r\n                datasets: [\r\n                  {\r\n                    label: `${coin.id} in ${currency}`,\r\n                    data:[1,2,3,4,5,6,7],\r\n                    //coinChartData.map(value=>value.y),\r\n                    borderColor: 'rgb(255, 99, 132)',\r\n                    backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n                  },\r\n                ],\r\n              })\r\n        \r\n  \r\n  \r\n  const coinUrl = `https://api.coingecko.com/api/v3/coins/${coin.id}/market_chart?vs_currency=${currency}&days=${days}`\r\n        axios.get(coinUrl).then(\r\n            (res) => { setCoindata(res.data)\r\n            console.log(res.data);\r\n        })\r\n        \r\n        const coinChartData=coinval.prices.map(value=>({\r\n        x:value[0],y:value[1].toLocalString().toFixed(2)\r\n      }));\r\n\r\n    const options = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: `${coin.id} Chart`,\r\n          },\r\n        },\r\n      };\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}