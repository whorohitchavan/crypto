{"ast":null,"code":"var _jsxFileName = \"F:\\\\FSD-FT\\\\project\\\\New folder\\\\New folder\\\\crypto\\\\dashboard\\\\src\\\\components\\\\Coinchart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport axios from \"axios\";\nimport moment from \"moment-timezone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport default function CoinChart(props) {\n  _s();\n\n  const {\n    id,\n    currency,\n    days\n  } = props;\n  const [coinval, setCoindata] = useState(() => {\n    const url = `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=${currency}&days=${days}`;\n    axios.get(url).then(res => res.data);\n  });\n  console.log(coinval);\n  useEffect(() => {\n    const url = `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=${currency}&days=${days}`;\n    axios.get(url).then(res => {\n      setCoindata(res.data);\n    });\n  }, [id, currency, days]);\n  console.log(id);\n  const coinChartData = coinval.prices.map(value => ({\n    x: value[0],\n    y: value[1].toFixed(2)\n  }));\n  console.log(coinChartData);\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: `${id} Chart`\n      }\n    }\n  };\n  const data = {\n    labels: [1, 2, 3, 4, 5, 6, 7],\n    //coinChartData.map(value=>{ moment(value.x).format('MMMDD')}),\n    datasets: [{\n      label: `${id} in ${currency}`,\n      data: [1, 2, 3, 4, 5, 6, 7],\n      //coinChartData.map(value=>value.y),\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n/*\r\n\r\nconst {coinval,setCoindata}=useState(()=>{\r\n        const coinUrl = `https://api.coingecko.com/api/v3/coins/${params.coinId}/market_chart?vs_currency=usd&days=7`\r\n    axios.get(coinUrl).then(\r\n        (res) => { console.log(res.data);\r\n        return res.data;\r\n    })});\r\n    console.log(coin.id);\r\n    console.log(coinval);\r\n    const [data,setData]=useState({\r\n        labels:[1,2,3,4,5,6,7]\r\n        /*coinChartData.map(value=>{\r\n                  moment(value.x).format('MMMDD')\r\n                }),\r\n                datasets: [\r\n                  {\r\n                    label: `${coin.id} in ${currency}`,\r\n                    data:[1,2,3,4,5,6,7],\r\n                    //coinChartData.map(value=>value.y),\r\n                    borderColor: 'rgb(255, 99, 132)',\r\n                    backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n                  },\r\n                ],\r\n              })\r\n        \r\n  \r\n  \r\n  const coinUrl = `https://api.coingecko.com/api/v3/coins/${coin.id}/market_chart?vs_currency=${currency}&days=${days}`\r\n        axios.get(coinUrl).then(\r\n            (res) => { setCoindata(res.data)\r\n            console.log(res.data);\r\n        })\r\n        \r\n        const coinChartData=coinval.prices.map(value=>({\r\n        x:value[0],y:value[1].toLocalString().toFixed(2)\r\n      }));\r\n\r\n    const options = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: `${coin.id} Chart`,\r\n          },\r\n        },\r\n      };\r\n\r\n*/\n\n_s(CoinChart, \"tiBpvYQ7/6lQ7NcA+x6w/aYx5hY=\");\n\n_c = CoinChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinChart\");","map":{"version":3,"sources":["F:/FSD-FT/project/New folder/New folder/crypto/dashboard/src/components/Coinchart.js"],"names":["React","useEffect","useState","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","axios","moment","register","CoinChart","props","id","currency","days","coinval","setCoindata","url","get","then","res","data","console","log","coinChartData","prices","map","value","x","y","toFixed","options","responsive","plugins","legend","position","title","display","text","labels","datasets","label","borderColor","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n  } from 'chart.js';\r\n  import { Line } from 'react-chartjs-2';\r\nimport axios from \"axios\";\r\nimport moment from \"moment-timezone\";\r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n  );\r\n\r\n\r\nexport default function CoinChart(props){\r\n  const {id,currency,days}=props;\r\n  const [coinval,setCoindata]=useState(()=>{\r\n    const url = `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=${currency}&days=${days}`\r\n    axios.get(url)\r\n    .then((res)=>res.data);\r\n  });\r\n  console.log(coinval);\r\n  useEffect(() => {\r\n    const url = `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=${currency}&days=${days}`\r\n     axios.get(url).then(\r\n        (res) => { setCoindata(res.data); }               \r\n    )\r\n},[id,currency,days]);\r\nconsole.log(id);\r\n\r\n  const coinChartData=coinval.prices.map(value=>({\r\n    x:value[0],y:value[1].toFixed(2)\r\n  }));\r\n  console.log(coinChartData);\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: `${id} Chart`,\r\n      },\r\n    },\r\n  };\r\n  \r\n  \r\n const data = {\r\n    labels:[1,2,3,4,5,6,7],\r\n    //coinChartData.map(value=>{ moment(value.x).format('MMMDD')}),\r\n    datasets: [\r\n      {\r\n        label: `${id} in ${currency}`,\r\n        data:[1,2,3,4,5,6,7],\r\n        //coinChartData.map(value=>value.y),\r\n        borderColor: 'rgb(255, 99, 132)',\r\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n      },\r\n    ],\r\n  };\r\n  return(\r\n    <>\r\n      <Line options={options} data={data} />\r\n    </>\r\n)\r\n\r\n}\r\n/*\r\n\r\nconst {coinval,setCoindata}=useState(()=>{\r\n        const coinUrl = `https://api.coingecko.com/api/v3/coins/${params.coinId}/market_chart?vs_currency=usd&days=7`\r\n    axios.get(coinUrl).then(\r\n        (res) => { console.log(res.data);\r\n        return res.data;\r\n    })});\r\n    console.log(coin.id);\r\n    console.log(coinval);\r\n    const [data,setData]=useState({\r\n        labels:[1,2,3,4,5,6,7]\r\n        /*coinChartData.map(value=>{\r\n                  moment(value.x).format('MMMDD')\r\n                }),\r\n                datasets: [\r\n                  {\r\n                    label: `${coin.id} in ${currency}`,\r\n                    data:[1,2,3,4,5,6,7],\r\n                    //coinChartData.map(value=>value.y),\r\n                    borderColor: 'rgb(255, 99, 132)',\r\n                    backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n                  },\r\n                ],\r\n              })\r\n        \r\n  \r\n  \r\n  const coinUrl = `https://api.coingecko.com/api/v3/coins/${coin.id}/market_chart?vs_currency=${currency}&days=${days}`\r\n        axios.get(coinUrl).then(\r\n            (res) => { setCoindata(res.data)\r\n            console.log(res.data);\r\n        })\r\n        \r\n        const coinChartData=coinval.prices.map(value=>({\r\n        x:value[0],y:value[1].toLocalString().toFixed(2)\r\n      }));\r\n\r\n    const options = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: `${coin.id} Chart`,\r\n          },\r\n        },\r\n      };\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}