{"ast":null,"code":"var _jsxFileName = \"F:\\\\FSD-FT\\\\project\\\\New folder\\\\New folder\\\\crypto\\\\dashboard\\\\src\\\\components\\\\Coinchart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport axios from \"axios\";\nimport moment from \"moment-timezone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport default function CoinChart(props) {\n  _s();\n\n  const {\n    id,\n    currency,\n    days\n  } = props;\n  const [coinval, setCoindata] = useState([]);\n  useEffect(async () => {\n    const url = `https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=7`;\n    await fetch(url).then(res => {\n      setCoindata(res.data);\n      console.log(res.data);\n    });\n  }, []);\n  console.log(coinval);\n  const coinChartData = coinval.prices.map(value => ({\n    x: value[0],\n    y: value[1].toLocalString().toFixed(2)\n  }));\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: `${id} Chart`\n      }\n    }\n  };\n  const data = {\n    labels: coinChartData.map(value => {\n      moment(value.x).format('MMMDD');\n    }),\n    datasets: [{\n      label: `${id} in ${currency}`,\n      data: coinChartData.map(value => value.y),\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s(CoinChart, \"4PcFu7PS/UCfj/i6Q6nGbtNaygo=\");\n\n_c = CoinChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinChart\");","map":{"version":3,"sources":["F:/FSD-FT/project/New folder/New folder/crypto/dashboard/src/components/Coinchart.js"],"names":["React","useEffect","useState","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","axios","moment","register","CoinChart","props","id","currency","days","coinval","setCoindata","url","fetch","then","res","data","console","log","coinChartData","prices","map","value","x","y","toLocalString","toFixed","options","responsive","plugins","legend","position","title","display","text","labels","format","datasets","label","borderColor","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACIC,KAAK,IAAIC,OADb,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,YAJJ,EAKIC,WALJ,EAMIC,KANJ,EAOIC,OAPJ,EAQIC,MARJ,QASS,UATT;AAUE,SAASC,IAAT,QAAqB,iBAArB;AACF,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;;AACEV,OAAO,CAACW,QAAR,CACEV,aADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,MAPF;AAWF,eAAe,SAASK,SAAT,CAAmBC,KAAnB,EAAyB;AAAA;;AACtC,QAAM;AAACC,IAAAA,EAAD;AAAIC,IAAAA,QAAJ;AAAaC,IAAAA;AAAb,MAAmBH,KAAzB;AACA,QAAK,CAACI,OAAD,EAASC,WAAT,IAAsBpB,QAAQ,CAAC,EAAD,CAAnC;AAEAD,EAAAA,SAAS,CAAC,YAAW;AACnB,UAAMsB,GAAG,GAAI,oFAAb;AACA,UAAMC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CACDC,GAAD,IAAS;AAAEJ,MAAAA,WAAW,CAACI,GAAG,CAACC,IAAL,CAAX;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AAAuB,KAFrB,CAAN;AAIH,GANU,EAMT,EANS,CAAT;AAOFC,EAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACA,QAAMS,aAAa,GAACT,OAAO,CAACU,MAAR,CAAeC,GAAf,CAAmBC,KAAK,KAAG;AAC7CC,IAAAA,CAAC,EAACD,KAAK,CAAC,CAAD,CADsC;AAClCE,IAAAA,CAAC,EAACF,KAAK,CAAC,CAAD,CAAL,CAASG,aAAT,GAAyBC,OAAzB,CAAiC,CAAjC;AADgC,GAAH,CAAxB,CAApB;AAII,QAAMC,OAAO,GAAG;AACZC,IAAAA,UAAU,EAAE,IADA;AAEZC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ,OADD;AAIPC,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,IADJ;AAELC,QAAAA,IAAI,EAAG,GAAE3B,EAAG;AAFP;AAJA;AAFG,GAAhB;AAcC,QAAMS,IAAI,GAAG;AACVmB,IAAAA,MAAM,EACNhB,aAAa,CAACE,GAAd,CAAkBC,KAAK,IAAE;AACfnB,MAAAA,MAAM,CAACmB,KAAK,CAACC,CAAP,CAAN,CAAgBa,MAAhB,CAAuB,OAAvB;AACD,KAFT,CAFU;AAKVC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAG,GAAE/B,EAAG,OAAMC,QAAS,EAD9B;AAEEQ,MAAAA,IAAI,EAACG,aAAa,CAACE,GAAd,CAAkBC,KAAK,IAAEA,KAAK,CAACE,CAA/B,CAFP;AAGEe,MAAAA,WAAW,EAAE,mBAHf;AAIEC,MAAAA,eAAe,EAAE;AAJnB,KADQ;AALA,GAAb;AAeD,sBACI;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAEb,OAAf;AAAwB,MAAA,IAAI,EAAEX;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF,mBADJ;AAMH;;GAnDuBX,S;;KAAAA,S","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n  } from 'chart.js';\r\n  import { Line } from 'react-chartjs-2';\r\nimport axios from \"axios\";\r\nimport moment from \"moment-timezone\";\r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n  );\r\n\r\n\r\nexport default function CoinChart(props){\r\n  const {id,currency,days}=props;\r\n  const[coinval,setCoindata]=useState([]);\r\n  \r\n  useEffect(async() => {\r\n    const url = `https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=7`\r\n    await fetch(url).then(\r\n        (res) => { setCoindata(res.data)\r\n        console.log(res.data) }               \r\n    )\r\n},[])\r\nconsole.log(coinval);\r\nconst coinChartData=coinval.prices.map(value=>({\r\n  x:value[0],y:value[1].toLocalString().toFixed(2)\r\n}));\r\n\r\n    const options = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: `${id} Chart`,\r\n          },\r\n        },\r\n      };\r\n      \r\n      \r\n     const data = {\r\n        labels:\r\n        coinChartData.map(value=>{\r\n                  moment(value.x).format('MMMDD')\r\n                }),\r\n        datasets: [\r\n          {\r\n            label: `${id} in ${currency}`,\r\n            data:coinChartData.map(value=>value.y),\r\n            borderColor: 'rgb(255, 99, 132)',\r\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n          },\r\n        ],\r\n      };\r\n\r\n    return(\r\n        <>\r\n          <Line options={options} data={data} />\r\n        </>\r\n    )\r\n\r\n}\r\n  "]},"metadata":{},"sourceType":"module"}